{
    "collab_server" : "",
    "contents" : "# Function 1: Create function to calculate percent distribution for factors\npct <- function(x){\n  tbl <- table(10)\n  tbl_pct <- cbind(tbl,round(prop.table(tbl)*100,2))\n  colnames(tbl_pct) <- c('Count','Percentage')\n  kable(tbl_pct)\n}\n\n\n# pct(cdata$good_bad_21)\n\n# Function 2: Own function to calculate IV, WOE and Eefficiency \ngbpct <- function(x, y=cdata$good_bad_21){\n  mt <- as.matrix(table(as.factor(x), as.factor(y))) # x -> independent variable(vector), y->dependent variable(vector)\n  Total <- mt[,1] + mt[,2]                          # Total observations\n  Total_Pct <- round(Total/sum(mt)*100, 2)          # Total PCT\n  Bad_pct <- round((mt[,1]/sum(mt[,1]))*100, 2)     # PCT of BAd or event or response\n  Good_pct <- round((mt[,2]/sum(mt[,2]))*100, 2)   # PCT of Good or non-event\n  Bad_Rate <- round((mt[,1]/(mt[,1]+mt[,2]))*100, 2) # Bad rate or response rate\n  grp_score <- round((Good_pct/(Good_pct + Bad_pct))*10, 2) # score for each group\n  WOE <- round(log(Good_pct/Bad_pct)*10, 2)      # Weight of Evidence for each group\n  g_b_comp <- ifelse(mt[,1] == mt[,2], 0, 1)\n  IV <- ifelse(g_b_comp == 0, 0, (Good_pct - Bad_pct)*(WOE/10)) # Information value for each group\n  Efficiency <- abs(Good_pct - Bad_pct)/2                       # Efficiency for each group\n  otb<-as.data.frame(cbind(mt, Good_pct,  Bad_pct,  Total, \n                           Total_Pct,  Bad_Rate, grp_score, \n                           WOE, IV, Efficiency ))\n  otb$Names <- rownames(otb)\n  rownames(otb) <- NULL\n  otb[,c(12,2,1,3:11)] # return IV table\n}\n\n# Function 3: Normalize using Range\n\nnormalize <- function(x) {\n  return((x - min(x)) / (max(x) - min(x)))\n}\n",
    "created" : 1518613287221.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "949205416",
    "id" : "2262436",
    "lastKnownWriteTime" : 1518613621,
    "last_content_update" : 1518617748482,
    "path" : "D:/Documents/Datascience/R/CreditRating/userdefinedfunctions.R",
    "project_path" : "userdefinedfunctions.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}